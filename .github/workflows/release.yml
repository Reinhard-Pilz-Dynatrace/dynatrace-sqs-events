name: release

on:
  push:
    tags:
      - 'v*'     # e.g., v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # needed to create the release & upload assets

    env:
      GOOS: linux
      GOARCH: arm64         # or amd64; must match your Lambda architecture
      CGO_ENABLED: 0
      TAG: ${{ github.ref_name }}                  # e.g., v1.0.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build executable
        run: |
          go build -tags lambda.norpc -trimpath -ldflags "-s -w -buildid=" -o bootstrap ./cmd/lambda

      - name: Create asset
        run: |
          chmod 0755 bootstrap
          TZ=UTC touch -t 198001010000 bootstrap
          zip -X -q "function-${{ github.ref_name }}.zip" bootstrap

      - name: Create GitHub Release & upload asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          draft: false
          prerelease: false
          files: |
            function-${{ github.ref_name }}.zip
